문제 설명
정수 n이 매개변수로 주어집니다. 다음 그림과 같이 밑변의 길이와 높이가 n인 삼각형에서 맨 위 꼭짓점부터 반시계 방향으로 달팽이 채우기를 진행한 후, 첫 행부터 마지막 행까지 모두 순서대로 합친 새로운 배열을 return 하도록 solution 함수를 완성해주세요.

examples.png

제한사항
n은 1 이상 1,000 이하입니다.
입출력 예
n	result
4	[1,2,9,3,10,8,4,5,6,7]
5	[1,2,12,3,13,11,4,14,15,10,5,6,7,8,9]
6	[1,2,15,3,16,14,4,17,21,13,5,18,19,20,12,6,7,8,9,10,11]
입출력 예 설명
입출력 예 #1

문제 예시와 같습니다.
입출력 예 #2

문제 예시와 같습니다.
입출력 예 #3

문제 예시와 같습니다.

결과
class Solution {
    public int[] solution(int n) {
        int[][] arr = new int[n][n];
		int[] answer; 
		int x = -1, y = 0;
		int value = 1;
		int cnt = 0;
		
		for (int i = 0; i < n; i++) { // 세로 -> 가로 -> 대각선 순서를 정해주기위한 i
			for(int j = i; j < n ; j++) { //세로, 가로, 대각선 순서로 갯수가 줄어들기 때문에 그걸 위한 j
				if(i % 3 == 0) x++;    // i의 처음이 0이기 때문에 세로로 증가 시키기
				else if(i % 3 == 1) y++; // 세로가 끝이나면 가로이기 때문에 가로로 증가시키기
				else if(i % 3 == 2) {   // 마지막으로 가로가 끝이나면 대각선이기 때문에 가로 세로 감소시키기
					x--;
					y--;
			}
				arr[x][y] = value++;
				cnt++;
			}
		}
		answer = new int[cnt];
		int index = -1;
		
		for (int i = 0; i < n; i++) {
			for(int j = 0; j < n ; j++) {
				if(arr[i][j] == 0) break;
				answer[++index] = arr[i][j];
			}
		}
        return answer;
    }
}
